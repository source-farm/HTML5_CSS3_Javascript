@charset 'utf-8';

/*
Селектор * выбирает все элементы страницы.

Свойство box-sizing определяет как свойства width и height влияют на общую ширину и высоту блочного элемента.
По-умолчанию это свойство равно content-box, который определяет, что свойство width устанавливает только ширину
контента блочного элемента без учёта ширины внутреннего отступа(padding), рамки(border) и внешнего отступа(margin).
Т.е. общая ширина блочного элемента будет складываться из значения, установленного через свойство width плюс
ширина внутреннего отступа, рамки и внешнего отступа.

Если свойство box-sizing установить равным border-box, то свойство width будет задавать ширину контента, внутреннего
отступа и рамки, но не внешнего отступа. Т.е. в этом случае общая ширина блочного элемента будет складываться из
значения, заданного через свойство width плюс ширина внешнего отступа.

То же самое касается и высоты.
*/
* {
    box-sizing: border-box;
}

header {
    /* Задаём рамку(border) шириной 5px сплошного чёрного цвета. */
    border: 5px solid #000;
    height: 100px;
    font-size: 2em;
    color: #000;
}

/*
Сначала объясним немного теории касательно блочных и плавающих элементов.
Зачем вообще используют плавающие элементы. Плавающие элементы применяются тогда, когда разработчику нужно
расположить несколько блочных элементов в один ряд.

По-умолчанию блочные элементы занимают 100% ширины документа, но если прижать блок влево или право(float left or
right), то его размер меняется в соответствии с контентом. Это можно увидеть, сравнив HTML документы:

    normal_behavior_of_block_level_element.html

    и

    floated_behavior_of_block_level_element.html

Прижатый к левому краю div освобождает место справа от себя, что позволяет встать на это место другим элементам. Если
не прижимать блочные элементы никуда, то они будут рендерится друг за другом. Этот эффект можно увидеть, сравнив
документы:

    divs_with_float.html

    и

    divs_without_float.html
    
*/
aside {
    float: left;
    width: 30%;
    height: 300px;
    border: 5px solid #F00;
    font-size: 2em;
    color: #F00;
}

section {
    float: left;
    width: 70%;
    height: 300px;
    border: 5px solid #0F0;
    font-size: 2em;
    color: #0F0;
}

div.clear {
    clear: both;
}

footer {
    border: 5px solid #00F;
    height: 100px;
    font-size: 2em;
    color: #00F;
}
